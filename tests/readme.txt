### Test cases to test New Order API.


To run the testsuite: navigate to the dir of the tests and execute:
"pytest --html=report.html --self-contained-html --tb=short"

======================================================================================================================================
## Assumptions:
======================================================================================================================================
1.) Sandbox environment is actively available.
2.) Assigned trader is authorized for all trading activity.
3.) Auction markets are not available (or auction times are unknown to user).
4.) There are no price limits (bands) active on any instruments or trading account.
5.) There are no quantity limits active on any instruments or trading account.
6.) Trading account does not use heartbeat to keep alive.

======================================================================================================================================
## Environment:
======================================================================================================================================
1.) python 3.7
2.) pytest 6.1.2
3.) pytest-html 3.0.0
4.) requests 2.24.0


======================================================================================================================================
## Structure:
======================================================================================================================================
The tests are divided into two broad categories, positive and negative tests.
Helper functions are in the helper.py file.

An html report can be generated by using the '--html=report.html --self-contained-html' option (note pytest-html is required to use this)
A report for the last run from my computer is included in the attached zip file.


======================================================================================================================================
## Tests included
======================================================================================================================================
<Module test_new_order.py>
  <UnitTestCase TestNewOrderPositive>
    <TestCaseFunction test_new_order_buy>
    <TestCaseFunction test_new_order_client_order_id_buy>
    <TestCaseFunction test_new_order_limit_fill_or_kill_buy>
    <TestCaseFunction test_new_order_limit_fill_or_kill_sell>
    <TestCaseFunction test_new_order_limit_immediate_or_cancel_buy>
    <TestCaseFunction test_new_order_limit_immediate_or_cancel_sell>
    <TestCaseFunction test_new_order_limit_indication_of_interest_buy>
    <TestCaseFunction test_new_order_limit_indication_of_interest_sell>
    <TestCaseFunction test_new_order_limit_maker_or_cancel_buy>
    <TestCaseFunction test_new_order_limit_maker_or_cancel_sell>
    <TestCaseFunction test_new_order_sell>
    <TestCaseFunction test_new_order_stop_limit_buy>
    <TestCaseFunction test_new_order_stop_limit_sell>
    <TestCaseFunction test_new_order_stop_limit_trigger_buy>
    <TestCaseFunction test_new_order_stop_limit_trigger_sell>
    <TestCaseFunction test_new_orders_trade>
<Module test_new_order_negative.py>
  <UnitTestCase TestNewOrderNegative>
    <TestCaseFunction test_new_order_buy_invalid_side>
    <TestCaseFunction test_new_order_buy_invalid_symbol>
    <TestCaseFunction test_new_order_buy_invalid_type>
    <TestCaseFunction test_new_order_sell_invalid_side>
    <TestCaseFunction test_new_order_sell_invalid_symbol>
    <TestCaseFunction test_new_order_sell_invalid_type>
    <TestCaseFunction test_new_order_stop_limit_buy_invalid_option>
    <TestCaseFunction test_new_order_stop_limit_buy_invalid_stop_price>
    <TestCaseFunction test_new_order_stop_limit_sell_invalid_option>
    <TestCaseFunction test_new_order_stop_limit_sell_invalid_stop_price>
